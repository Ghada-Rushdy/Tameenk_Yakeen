// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tameenk.Yakeen.DAL;

namespace Tameenk.Yakeen.DAL.Migrations
{
    [DbContext(typeof(YakeenContext))]
    partial class YakeenContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tameenk.Yakeen.DAL.Address", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalNumber");

                    b.Property<string>("Address1");

                    b.Property<string>("Address2");

                    b.Property<string>("AddressLoction");

                    b.Property<int?>("AlienID");

                    b.Property<string>("BuildingNumber");

                    b.Property<int?>("CitizenID");

                    b.Property<string>("City");

                    b.Property<string>("CityId");

                    b.Property<string>("District");

                    b.Property<Guid?>("DriverId");

                    b.Property<string>("IsPrimaryAddress");

                    b.Property<string>("Latitude");

                    b.Property<string>("Longitude");

                    b.Property<string>("ObjLatLng");

                    b.Property<string>("PKAddressID");

                    b.Property<string>("PolygonString");

                    b.Property<string>("PostCode");

                    b.Property<string>("RegionId");

                    b.Property<string>("RegionName");

                    b.Property<string>("Restriction");

                    b.Property<string>("Street");

                    b.Property<string>("Title");

                    b.Property<string>("UnitNumber");

                    b.HasKey("ID");

                    b.HasIndex("AlienID");

                    b.HasIndex("CitizenID");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.Alien", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChildrenBelow16Years");

                    b.Property<long?>("CityId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DateOfBirthG");

                    b.Property<string>("DateOfBirthH");

                    b.Property<Guid>("DriverId");

                    b.Property<int?>("DrivingPercentage");

                    b.Property<int>("Education");

                    b.Property<int>("EducationId");

                    b.Property<string>("EnglishFirstName");

                    b.Property<string>("EnglishLastName");

                    b.Property<string>("EnglishSecondName");

                    b.Property<string>("EnglishThirdName");

                    b.Property<string>("FirstName");

                    b.Property<int>("Gender");

                    b.Property<int>("GenderId");

                    b.Property<string>("IdExpiryDate");

                    b.Property<string>("IdIssuePlace");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsCitizen");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool?>("IsSpecialNeed");

                    b.Property<string>("LastName");

                    b.Property<int>("MedicalCondition");

                    b.Property<int?>("MedicalConditionId");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int?>("NCDFreeYears");

                    b.Property<string>("NCDReference");

                    b.Property<string>("NIN");

                    b.Property<int?>("NOALast5Years");

                    b.Property<int?>("NOCLast5Years");

                    b.Property<short?>("NationalityCode");

                    b.Property<int?>("OccupationId");

                    b.Property<string>("ResidentOccupation");

                    b.Property<string>("SecondName");

                    b.Property<string>("ServerIP");

                    b.Property<int>("SocialStatus");

                    b.Property<int?>("SocialStatusId");

                    b.Property<string>("SubtribeName");

                    b.Property<string>("ThirdName");

                    b.Property<string>("UserAgent");

                    b.Property<string>("UserIP");

                    b.Property<long?>("WorkCityId");

                    b.HasKey("ID");

                    b.HasIndex("CityId");

                    b.HasIndex("OccupationId");

                    b.HasIndex("WorkCityId");

                    b.ToTable("Aliens");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.AlienRequestLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("AlienID");

                    b.Property<int>("Channel");

                    b.Property<int>("ErrorCode");

                    b.Property<string>("ErrorDescription");

                    b.Property<string>("Method");

                    b.Property<long>("NiN");

                    b.Property<string>("ReferenceId");

                    b.Property<string>("ServerIP");

                    b.Property<string>("ServiceURL");

                    b.HasKey("ID");

                    b.ToTable("AlienRequestLogs");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.Channel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExpireDateInDays");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.Citizen", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChildrenBelow16Years");

                    b.Property<long?>("CityId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<DateTime>("DateOfBirthG");

                    b.Property<string>("DateOfBirthH");

                    b.Property<Guid>("DriverId");

                    b.Property<int?>("DrivingLicenseTypeCode");

                    b.Property<int?>("DrivingPercentage");

                    b.Property<int>("Education");

                    b.Property<int?>("EducationId");

                    b.Property<int?>("EligibleForNoClaimsDiscountYears");

                    b.Property<string>("EnglishFirstName");

                    b.Property<string>("EnglishLastName");

                    b.Property<string>("EnglishSecondName");

                    b.Property<string>("EnglishThirdName");

                    b.Property<string>("FirstName");

                    b.Property<int>("Gender");

                    b.Property<int?>("GenderId");

                    b.Property<string>("IdExpiryDate");

                    b.Property<string>("IdIssuePlace");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsCitizen");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool?>("IsSpecialNeed");

                    b.Property<string>("LastName");

                    b.Property<int?>("MaritalStatusCode");

                    b.Property<int>("MedicalCondition");

                    b.Property<int?>("MedicalConditionId");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<int?>("NCDFreeYears");

                    b.Property<string>("NCDReference");

                    b.Property<string>("NIN");

                    b.Property<int?>("NOALast5Years");

                    b.Property<int?>("NOCLast5Years");

                    b.Property<short?>("NationalityCode");

                    b.Property<int?>("NumOfChildsUnder16");

                    b.Property<int?>("NumOfFaultAccidentInLast5Years");

                    b.Property<int?>("NumOfFaultclaimInLast5Years");

                    b.Property<int?>("OccupationId");

                    b.Property<string>("ResidentOccupation");

                    b.Property<string>("RoadConvictions");

                    b.Property<int?>("SaudiLicenseHeldYears");

                    b.Property<string>("SecondName");

                    b.Property<string>("ServerIP");

                    b.Property<int>("SocialStatus");

                    b.Property<int?>("SocialStatusId");

                    b.Property<string>("SubtribeName");

                    b.Property<string>("ThirdName");

                    b.Property<string>("UserAgent");

                    b.Property<string>("UserIP");

                    b.Property<int?>("ViolationId");

                    b.Property<long?>("WorkCityId");

                    b.HasKey("ID");

                    b.HasIndex("CityId");

                    b.HasIndex("OccupationId");

                    b.HasIndex("WorkCityId");

                    b.ToTable("Citizens");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.CitizenRequestLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Channel");

                    b.Property<Guid>("CitizenId");

                    b.Property<int>("ErrorCode");

                    b.Property<string>("ErrorDescription");

                    b.Property<bool>("IsCitizen");

                    b.Property<string>("Method");

                    b.Property<long>("NiN");

                    b.Property<string>("ReferenceNumber");

                    b.Property<string>("ServerIP");

                    b.Property<string>("licenseExpiryDate");

                    b.HasKey("ID");

                    b.ToTable("CitizenRequestLogs");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.City", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArabicDescription");

                    b.Property<long>("Code");

                    b.Property<string>("EnglishDescription");

                    b.Property<int?>("RegionId");

                    b.HasKey("ID");

                    b.HasIndex("RegionId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("SponsorId");

                    b.Property<string>("SponsorName");

                    b.Property<int>("TotalNumberOfSponsoredDependents");

                    b.Property<int>("TotalNumberOfSponsoreds");

                    b.Property<int>("logId");

                    b.HasKey("ID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.CompanyRequestLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Channel");

                    b.Property<int>("ErrorCode");

                    b.Property<string>("ErrorDescription");

                    b.Property<string>("Method");

                    b.Property<string>("ReferenceId");

                    b.Property<string>("ServerIP");

                    b.Property<string>("ServiceURL");

                    b.Property<string>("sponsorNumber");

                    b.HasKey("ID");

                    b.ToTable("CompanyRequestLogs");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.DriverExtraLicense", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlienID");

                    b.Property<int?>("CitizenID");

                    b.Property<short>("CountryCode");

                    b.Property<Guid>("DriverId");

                    b.Property<int>("LicenseYearsId");

                    b.HasKey("ID");

                    b.HasIndex("AlienID");

                    b.HasIndex("CitizenID");

                    b.ToTable("DriverExtraLicense");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.DriverLicense", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlienID");

                    b.Property<int?>("CitizenID");

                    b.Property<Guid>("DriverId");

                    b.Property<string>("ExpiryDateH");

                    b.Property<string>("IssueDateH");

                    b.Property<int>("LicenseId");

                    b.Property<short?>("TypeDesc");

                    b.HasKey("ID");

                    b.HasIndex("AlienID");

                    b.HasIndex("CitizenID");

                    b.ToTable("DriverLicense");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.Enums.DriverViolation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlienID");

                    b.Property<int?>("CitizenID");

                    b.Property<Guid>("DriverId");

                    b.Property<int>("ViolationId");

                    b.HasKey("ID");

                    b.HasIndex("AlienID");

                    b.HasIndex("CitizenID");

                    b.ToTable("DriverViolation");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.LicenseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArabicDescription");

                    b.Property<short>("Code");

                    b.Property<string>("EnglishDescription");

                    b.HasKey("Id");

                    b.ToTable("LicenseType");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.Occupation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<bool?>("IsCitizen");

                    b.Property<bool?>("IsMale");

                    b.Property<string>("NameAr");

                    b.Property<string>("NameEn");

                    b.HasKey("ID");

                    b.ToTable("Occupation");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.Region", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Region");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.ServiceRequestLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Channel")
                        .HasMaxLength(255);

                    b.Property<int?>("CompanyID");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("DriverNin");

                    b.Property<int?>("ErrorCode");

                    b.Property<string>("ErrorDescription");

                    b.Property<int?>("InsuranceTypeCode");

                    b.Property<string>("Method")
                        .HasMaxLength(255);

                    b.Property<string>("PolicyNo");

                    b.Property<string>("ReferenceId");

                    b.Property<Guid?>("RequestId");

                    b.Property<string>("ServerIP")
                        .HasMaxLength(50);

                    b.Property<string>("ServiceErrorCode")
                        .HasMaxLength(50);

                    b.Property<string>("ServiceErrorDescription");

                    b.Property<string>("ServiceRequest");

                    b.Property<string>("ServiceResponse");

                    b.Property<double?>("ServiceResponseTimeInSeconds");

                    b.Property<string>("ServiceURL")
                        .HasMaxLength(255);

                    b.Property<Guid?>("UserID");

                    b.Property<string>("UserName")
                        .HasMaxLength(255);

                    b.Property<string>("VehicleId");

                    b.Property<string>("VehicleMaker");

                    b.Property<string>("VehicleMakerCode");

                    b.Property<string>("VehicleModel");

                    b.Property<string>("VehicleModelCode");

                    b.Property<int?>("VehicleModelYear");

                    b.HasKey("ID");

                    b.ToTable("ServiceRequestLog");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.Vehicle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AxleWeightId");

                    b.Property<int?>("AxlesWeight");

                    b.Property<int?>("BrakeSystemId");

                    b.Property<int?>("CameraTypeId");

                    b.Property<string>("CarOwnerNIN");

                    b.Property<string>("CarOwnerName");

                    b.Property<short?>("CarPlateNumber");

                    b.Property<string>("CarPlateText1");

                    b.Property<string>("CarPlateText2");

                    b.Property<string>("CarPlateText3");

                    b.Property<string>("ChassisNumber");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<int?>("CruiseControlTypeId");

                    b.Property<decimal?>("CurrentMileageKM");

                    b.Property<string>("CustomCardNumber");

                    b.Property<byte?>("Cylinders");

                    b.Property<int?>("EngineSize");

                    b.Property<int?>("EngineSizeId");

                    b.Property<bool?>("HasAntiTheftAlarm");

                    b.Property<bool?>("HasFireExtinguisher");

                    b.Property<bool?>("HasModifications");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool?>("IsUsedCommercially");

                    b.Property<string>("LicenseExpiryDate");

                    b.Property<string>("MajorColor");

                    b.Property<int?>("MileageExpectedAnnual");

                    b.Property<int?>("MileageExpectedAnnualId");

                    b.Property<string>("MinorColor");

                    b.Property<short?>("ModelYear");

                    b.Property<string>("ModificationDetails");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<bool?>("OwnerTransfer");

                    b.Property<int?>("ParkingLocationId");

                    b.Property<int?>("ParkingSensorId");

                    b.Property<byte?>("PlateTypeCode");

                    b.Property<string>("RegisterationPlace");

                    b.Property<string>("SequenceNumber");

                    b.Property<string>("ServerIP");

                    b.Property<int?>("TransmissionType");

                    b.Property<int?>("TransmissionTypeId");

                    b.Property<string>("UserAgent");

                    b.Property<string>("UserIP");

                    b.Property<byte>("VehicleBodyCode");

                    b.Property<int?>("VehicleIdTypeId");

                    b.Property<int>("VehicleLoad");

                    b.Property<string>("VehicleMaker");

                    b.Property<short?>("VehicleMakerCode");

                    b.Property<string>("VehicleModel");

                    b.Property<long?>("VehicleModelCode");

                    b.Property<int>("VehicleUseId");

                    b.Property<int?>("VehicleValue");

                    b.Property<int>("VehicleWeight");

                    b.HasKey("ID");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.VehicleMaker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArabicDescription");

                    b.Property<short>("Code");

                    b.Property<string>("EnglishDescription");

                    b.HasKey("Id");

                    b.ToTable("VehicleMaker");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.VehicleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArabicDescription");

                    b.Property<long>("Code");

                    b.Property<string>("EnglishDescription");

                    b.Property<short>("VehicleMakerCode");

                    b.Property<int?>("VehicleMakerId");

                    b.HasKey("Id");

                    b.HasIndex("VehicleMakerId");

                    b.ToTable("VehicleModel");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.VehicleRequestLog", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Channel");

                    b.Property<int>("ErrorCode");

                    b.Property<string>("ErrorDescription");

                    b.Property<bool>("IsOwnerTransfer");

                    b.Property<string>("Method");

                    b.Property<short?>("ModelYear");

                    b.Property<long>("OwnerNin");

                    b.Property<string>("ReferenceNumber");

                    b.Property<string>("SequenceNumber");

                    b.Property<string>("ServerIP");

                    b.Property<string>("ServiceURL");

                    b.Property<int>("VehicleId");

                    b.Property<int>("VehicleIdTypeId");

                    b.HasKey("ID");

                    b.ToTable("VehicleRequestLogs");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.Address", b =>
                {
                    b.HasOne("Tameenk.Yakeen.DAL.Alien")
                        .WithMany("Addresses")
                        .HasForeignKey("AlienID");

                    b.HasOne("Tameenk.Yakeen.DAL.Citizen")
                        .WithMany("Addresses")
                        .HasForeignKey("CitizenID");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.Alien", b =>
                {
                    b.HasOne("Tameenk.Yakeen.DAL.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("Tameenk.Yakeen.DAL.Occupation", "Occupation")
                        .WithMany()
                        .HasForeignKey("OccupationId");

                    b.HasOne("Tameenk.Yakeen.DAL.City", "WorkCity")
                        .WithMany()
                        .HasForeignKey("WorkCityId");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.Citizen", b =>
                {
                    b.HasOne("Tameenk.Yakeen.DAL.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("Tameenk.Yakeen.DAL.Occupation", "Occupation")
                        .WithMany("Citizens")
                        .HasForeignKey("OccupationId");

                    b.HasOne("Tameenk.Yakeen.DAL.City", "WorkCity")
                        .WithMany()
                        .HasForeignKey("WorkCityId");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.City", b =>
                {
                    b.HasOne("Tameenk.Yakeen.DAL.Region", "Region")
                        .WithMany("Cities")
                        .HasForeignKey("RegionId");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.DriverExtraLicense", b =>
                {
                    b.HasOne("Tameenk.Yakeen.DAL.Alien")
                        .WithMany("DriverExtraLicenses")
                        .HasForeignKey("AlienID");

                    b.HasOne("Tameenk.Yakeen.DAL.Citizen")
                        .WithMany("DriverExtraLicenses")
                        .HasForeignKey("CitizenID");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.DriverLicense", b =>
                {
                    b.HasOne("Tameenk.Yakeen.DAL.Alien")
                        .WithMany("DriverLicenses")
                        .HasForeignKey("AlienID");

                    b.HasOne("Tameenk.Yakeen.DAL.Citizen")
                        .WithMany("DriverLicenses")
                        .HasForeignKey("CitizenID");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.Enums.DriverViolation", b =>
                {
                    b.HasOne("Tameenk.Yakeen.DAL.Alien")
                        .WithMany("DriverViolations")
                        .HasForeignKey("AlienID");

                    b.HasOne("Tameenk.Yakeen.DAL.Citizen")
                        .WithMany("DriverViolations")
                        .HasForeignKey("CitizenID");
                });

            modelBuilder.Entity("Tameenk.Yakeen.DAL.VehicleModel", b =>
                {
                    b.HasOne("Tameenk.Yakeen.DAL.VehicleMaker", "VehicleMaker")
                        .WithMany("VehicleModels")
                        .HasForeignKey("VehicleMakerId");
                });
#pragma warning restore 612, 618
        }
    }
}
